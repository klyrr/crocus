{
  "name": "Krokus",
  "tagline": "A collection for localization patterns",
  "body": "Krokus\r\n=====================\r\n\r\n[![Build Status](https://travis-ci.org/klyrr/krokus.svg?branch=master)](https://travis-ci.org/klyrr/krokus)\r\n[![Code Climate](https://codeclimate.com/github/klyrr/krokus/badges/gpa.svg)](https://codeclimate.com/github/klyrr/krokus)\r\n[![Test Coverage](https://codeclimate.com/github/klyrr/krokus/badges/coverage.svg)](https://codeclimate.com/github/klyrr/krokus/coverage)\r\n[![Locales 685](https://img.shields.io/badge/locales-685-green.svg)](https://img.shields.io/badge/locales-685-green.svg)\r\n[![Currencies 297](https://img.shields.io/badge/currencies-297-green.svg)](https://img.shields.io/badge/currencies-297-green.svg)\r\n\r\nA provider for localization patterns and an according number and currency formatter.\r\n\r\nIn order to have the all currency and locale patterns in one place.\r\n\r\n[ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) is a standard to format currencies.\r\n\r\nThe locale data is generated from [CLDR29](http://unicode.org/Public/cldr/29/core.zip) and the currency data is generated from [ISO](http://www.currency-iso.org/dam/downloads/lists/list_one.xml)\r\n\r\nUsage\r\n-----\r\n\r\n### Use the krokus formatter\r\n```javascript\r\nconst krokus = require('krokus');\r\n\r\nconst formatCurrencyPattern = {\r\n  pattern: '#,##0.00 ¤',\r\n  decimal_sep: ',',\r\n  group_sep: '.',\r\n  symbol: '€',\r\n};\r\n\r\n> krokus.formatCurrency(10000, formatCurrencyPattern);\r\n10.000,00 €\r\n```\r\n\r\n### Use the krokus parser\r\n```javascript\r\nconst krokus = require('krokus');\r\n\r\nconst formatCurrencyPattern = {\r\n  pattern: '#,##0.00 ¤',\r\n  decimal_sep: ',',\r\n  group_sep: '.',\r\n  symbol: '€',\r\n};\r\n\r\n> krokus.parseCurrency('10.000,00 €', formatPattern);\r\n10000\r\n```\r\n\r\n### Access the generated currency and locale settings\r\n```javascript\r\nconst krokus = require('krokus');\r\n\r\n> krokus.locales.de_DE\r\n{ number_pattern: '#,##0.###',\r\n  currency_pattern: '#,##0.00 ¤',\r\n  decimal_sep: ',',\r\n  group_sep: '.' }\r\n\r\n> krokus.currencies.EUR\r\n{ decimal: '2', symbol: 'EUR' }\r\n```\r\n\r\n#### Run the tests if the formats are still generating the expected formatted numbers in JS\r\n\r\n```\r\nnpm test\r\n```\r\n\r\n#### Generate the krokus number formatter from the es6 files\r\n\r\n```\r\nnpm run compile\r\n```\r\n\r\n#### Create the an up-to-date version of the json files\r\n\r\n```\r\nrake update\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}